Probability.Density.X.1<-density(rawdata$X.1)
plot(Probability.Density.X.1, main = "Density Plot of X values")
print (mean(rawdata$X.1))
print (sd(rawdata$X.1))
print (mean(Unscrambled.Selection.Sequence))
Week 4 Homework 1 - Linear Model and Classification
========================================================
Brian Ritz
--------------------------------------------------------
MSCA 31007 Autumn 2014
--------------------------------------------------------
Case 1
-----------------
First we will import the case 1 file and take a look at it.
```{r}
# import the data
rawdata <- read.csv("C:/Users/brianr/Desktop/uchicago/statistical_analysis/hw/LinearModelCase1.csv")
head(rawdata)
```
Now we plot
```{r}
plot(rawdata$X.1, rawdata$LinearModel);
```
It does look like a linear relationship -- lets estimate the relationship using the lm function:
```{r}
# estimate using linear model
EstimatedLinearModel <- lm(rawdata$LinearModel~rawdata$X.1)
```
Now find the coefficients for the data at hand
```{r}
EstimatedLinearModel$coefficients
summary(EstimatedLinearModel)
```
**INTERPRET THE RESULTS OF THE OUTPUT**
This output indicates that the process that created this distribution could have determined the Y coordinate by introducing some random error around the value -0.07341 + .80376X for a given value of X. The P-value for the intercept is 0.08, so this intercept would be measured about 8% of the time even if the "true" intercept was 0. If we use a 5% confidence hueristic, we are not very confident that the intercept is different from 0. We are confident that the slope is greater than 0, because the P-value on X.1 is much smaller.
Now lets take a look at the residuals.
```{r}
EstimatedResiduals<-EstimatedLinearModel$residuals
plot(rawdata$X.1,EstimatedResiduals)
```
You can see a little bit of a "tunnel" through the middle of the distribution around 0. We look at the density distribution and compare it to the normal distribution to get a better look.
```{r}
Probability.Density.Residuals<-density(EstimatedResiduals)
plot(Probability.Density.Residuals,ylim=c(0,.5))
lines(Probability.Density.Residuals$x,dnorm(Probability.Density.Residuals$x,mean=mean(EstimatedResiduals),sd=sd(EstimatedResiduals)))
```
**WHAT DO YOU CONCLUDE FROM THE ANALYSIS OF RESIDUALS**
Now we do see that there are some residual observations "missing" when compared to the normal distribution. When we look at the distribution, we see a bimodal density, which could indicate that there are actually two separate systems that are creating these data.
we now look at the means of the distribution of residuals on each side of zero.
```{r}
c(Left.Mean=mean(EstimatedResiduals[EstimatedResiduals<0]),Right.Mean=mean(EstimatedResiduals[EstimatedResiduals>0]))
```
The left mean and the right mean are very near -.75 and +.75 respectively. This could be the value of the intercept parameter for which the process that generates this data is set.
I now separate the data into subsamples where the residual is above zero, and where the residual is below zero. This basically divides the points into points that were above our estimated line, and points that were below our estimated line.
```{r}
nSample <- nrow(rawdata)
LinearModel <- rawdata
Unscrambled.Selection.Sequence<-(EstimatedResiduals>0)*1
LinearModel1.Recovered<-cbind(rep(1,nSample),rep(1,nSample))
LinearModel2.Recovered<-cbind(rep(1,nSample),rep(1,nSample))
LinearModel1.Recovered[Unscrambled.Selection.Sequence==1,1]<-LinearModel[Unscrambled.Selection.Sequence==1,2]
LinearModel1.Recovered[Unscrambled.Selection.Sequence==1,2]<-LinearModel[Unscrambled.Selection.Sequence==1,3]
LinearModel1.Recovered[Unscrambled.Selection.Sequence==0,1]<-NA
LinearModel1.Recovered[Unscrambled.Selection.Sequence==0,2]<-NA
LinearModel2.Recovered[Unscrambled.Selection.Sequence==0,1]<-LinearModel[Unscrambled.Selection.Sequence==0,2]
LinearModel2.Recovered[Unscrambled.Selection.Sequence==0,2]<-LinearModel[Unscrambled.Selection.Sequence==0,3]
LinearModel2.Recovered[Unscrambled.Selection.Sequence==1,1]<-NA
LinearModel2.Recovered[Unscrambled.Selection.Sequence==1,2]<-NA
matplot(rawdata[,2],cbind(LinearModel1.Recovered[,2],LinearModel2.Recovered[,2]), type="p",col=c("green","blue"),pch=19,ylab="Separated Subsamples")
```
Take a look at the switching process -- are the data points with residuals above the estimated line found in our original dataset in some systematic way?
```{r}
plot(Unscrambled.Selection.Sequence[1:100],type="s")
```
No obvious pattern appears. Let's estimate 2 new linear models from our subsamples that were created by determining if the residual was above or below zero.
```{r}
LinearModel1.Recovered.lm<-lm(LinearModel1.Recovered[,2]~LinearModel1.Recovered[,1])
LinearModel2.Recovered.lm<-lm(LinearModel2.Recovered[,2]~LinearModel2.Recovered[,1])
summary(LinearModel1.Recovered.lm)
summary(LinearModel2.Recovered.lm)
```
**WHAT IS THE DIFFERENCE BETWEEN THE QUALITY OF FIT**
The fit of the new models, as indicated by the R-squared statistic, is better than when we estimated a single model for all of the data points. The difference in the quality of fit can be shown by the differences in the R-squared. The R-squared for the two new models are both greater than .95 -- indicating a very high quality of fit. In contrast the R-squared of the original model fit to all the data was .84, which is still decent but not near the quality of fit as the two separate models. This difference can be accounted for because the original first model was not taking into account two separate data-generation processes.
**WHAT IS THE DIFFERENCE BETWEEN THE TWO ESTIMATED MODELS**
The difference between the two estimated models is the estimate for the intercept. One model has a negative intercept (-.80), while the other has a positive intercept (.66). The slopes are much the same (.81 to .80), only the intercepts differ. This means that the lines around which the two data generating processes introduced error were probably parallel to eachother, but differing in their Y-intercepts.
**HOW THE MODEL WAS CREATED AND WHAT WERE THE PARAMETERS**
```{r}
Probability.Density.X.1<-density(rawdata$X.1)
plot(Probability.Density.X.1, main = "Density Plot of X values")
print (mean(rawdata$X.1))
print (sd(rawdata$X.1))
print (mean(Unscrambled.Selection.Sequence))
# import the data
rawdata <- read.csv("C:/Users/Brian_Ritz/uchicago/statistical_analysis/hw/week04_hw/LinearModelCase1")
head(rawdata)
rawdata <- read.csv("C:/Users/Brian_Ritz/uchicago/statistical_analysis/hw/week04_hw/LinearModelCase1")
# import the data
rawdata <- read.csv("C:/Users/Brian_Ritz/uchicago/statistical_analysis/hw/week04_hw/LinearModelCase1.csv")
head(rawdata)
plot(rawdata$X.1, rawdata$LinearModel);
# estimate using linear model
EstimatedLinearModel <- lm(rawdata$LinearModel~rawdata$X.1)
EstimatedLinearModel$coefficients
summary(EstimatedLinearModel)
EstimatedResiduals<-EstimatedLinearModel$residuals
plot(rawdata$X.1,EstimatedResiduals)
Probability.Density.Residuals<-density(EstimatedResiduals)
plot(Probability.Density.Residuals,ylim=c(0,.5))
lines(Probability.Density.Residuals$x,dnorm(Probability.Density.Residuals$x,mean=mean(EstimatedResiduals),sd=sd(EstimatedResiduals)))
c(Left.Mean=mean(EstimatedResiduals[EstimatedResiduals<0]),Right.Mean=mean(EstimatedResiduals[EstimatedResiduals>0]))
nSample <- nrow(rawdata)
LinearModel <- rawdata
Unscrambled.Selection.Sequence<-(EstimatedResiduals>0)*1
LinearModel1.Recovered<-cbind(rep(1,nSample),rep(1,nSample))
LinearModel2.Recovered<-cbind(rep(1,nSample),rep(1,nSample))
LinearModel1.Recovered[Unscrambled.Selection.Sequence==1,1]<-LinearModel[Unscrambled.Selection.Sequence==1,2]
LinearModel1.Recovered[Unscrambled.Selection.Sequence==1,2]<-LinearModel[Unscrambled.Selection.Sequence==1,3]
LinearModel1.Recovered[Unscrambled.Selection.Sequence==0,1]<-NA
LinearModel1.Recovered[Unscrambled.Selection.Sequence==0,2]<-NA
LinearModel2.Recovered[Unscrambled.Selection.Sequence==0,1]<-LinearModel[Unscrambled.Selection.Sequence==0,2]
LinearModel2.Recovered[Unscrambled.Selection.Sequence==0,2]<-LinearModel[Unscrambled.Selection.Sequence==0,3]
LinearModel2.Recovered[Unscrambled.Selection.Sequence==1,1]<-NA
LinearModel2.Recovered[Unscrambled.Selection.Sequence==1,2]<-NA
matplot(rawdata[,2],cbind(LinearModel1.Recovered[,2],LinearModel2.Recovered[,2]), type="p",col=c("green","blue"),pch=19,ylab="Separated Subsamples")
plot(Unscrambled.Selection.Sequence[1:100],type="s")
LinearModel1.Recovered.lm<-lm(LinearModel1.Recovered[,2]~LinearModel1.Recovered[,1])
LinearModel2.Recovered.lm<-lm(LinearModel2.Recovered[,2]~LinearModel2.Recovered[,1])
summary(LinearModel1.Recovered.lm)
summary(LinearModel2.Recovered.lm)
plot(density(LinearModel1.Recovered.lm$residuals))
plot(density(LinearModel1.Recovered.lm$residuals))
plot(density(LinearModel2.Recovered.lm$residuals))
plot(density(LinearModel1.Recovered.lm$residuals))
plot(density(LinearModel2.Recovered.lm$residuals))
plot(density(LinearModel1.Recovered.lm$residuals))
plot(density(LinearModel2.Recovered.lm$residuals))
plot(density(LinearModel1.Recovered.lm$residuals))
plot(density(LinearModel1.Recovered.lm$residuals))
plot(density(LinearModel2.Recovered.lm$residuals))
AssignmentData<-read.csv(file="C:/users/yuri/documents/myfiles/uofc/2013-14/mscanalytics/lecturenotes/graphs/lecture4/regressionassignmentdata2014.csv",
header=TRUE,sep=",")
AssignmentData<-read.csv(file="C:/users/Brian_Ritz/uchicago/statistial_analysis/hw/course_project/regressionassignmentdata2014.csv",
header=TRUE,sep=",")
AssignmentData[1:10,]
AssignmentData<-read.csv(file="C:/users/Brian_Ritz/uchicago/statistical_analysis/hw/course_project/regressionassignmentdata2014.csv",
AssignmentData<-read.csv(file="C:/users/Brian_Ritz/uchicago/statistical_analysis/hw/course_project/regressionassignmentdata2014.csv",
header=TRUE,sep=",")
AssignmentData[1:10,]
AssignmentData$Tightening
sum(is.na(AssignmentData$Tightening))
length(AssignmentData$Tightening)
variance.by.x.pos <- c()
for (i in (-5:10)){
variance.by.x.pos <- c(variance.by.x.pos, var(EstimatedLinearModel2$residuals[LinearModel2$X.1 > i-.5 & LinearModel2$X.1 <i+.5]))
}
names(variance.by.x.pos) <- -5:10
print(variance.by.x.pos)
source('~/.active-rstudio-document', echo=TRUE)
# import the data
rawdata <- read.csv("C:/Users/Brian_Ritz/uchicago/statistical_analysis/hw/week04_hw/LinearModelCase1.csv")
head(rawdata)
plot(rawdata$X.1, rawdata$LinearModel);
# estimate using linear model
EstimatedLinearModel <- lm(rawdata$LinearModel~rawdata$X.1)
EstimatedLinearModel$coefficients
summary(EstimatedLinearModel)
EstimatedResiduals<-EstimatedLinearModel$residuals
plot(rawdata$X.1,EstimatedResiduals)
Probability.Density.Residuals<-density(EstimatedResiduals)
plot(Probability.Density.Residuals,ylim=c(0,.5))
lines(Probability.Density.Residuals$x,dnorm(Probability.Density.Residuals$x,mean=mean(EstimatedResiduals),sd=sd(EstimatedResiduals)))
c(Left.Mean=mean(EstimatedResiduals[EstimatedResiduals<0]),Right.Mean=mean(EstimatedResiduals[EstimatedResiduals>0]))
nSample <- nrow(rawdata)
LinearModel <- rawdata
Unscrambled.Selection.Sequence<-(EstimatedResiduals>0)*1
LinearModel1.Recovered<-cbind(rep(1,nSample),rep(1,nSample))
LinearModel2.Recovered<-cbind(rep(1,nSample),rep(1,nSample))
LinearModel1.Recovered[Unscrambled.Selection.Sequence==1,1]<-LinearModel[Unscrambled.Selection.Sequence==1,2]
LinearModel1.Recovered[Unscrambled.Selection.Sequence==1,2]<-LinearModel[Unscrambled.Selection.Sequence==1,3]
LinearModel1.Recovered[Unscrambled.Selection.Sequence==0,1]<-NA
LinearModel1.Recovered[Unscrambled.Selection.Sequence==0,2]<-NA
LinearModel2.Recovered[Unscrambled.Selection.Sequence==0,1]<-LinearModel[Unscrambled.Selection.Sequence==0,2]
LinearModel2.Recovered[Unscrambled.Selection.Sequence==0,2]<-LinearModel[Unscrambled.Selection.Sequence==0,3]
LinearModel2.Recovered[Unscrambled.Selection.Sequence==1,1]<-NA
LinearModel2.Recovered[Unscrambled.Selection.Sequence==1,2]<-NA
matplot(rawdata[,2],cbind(LinearModel1.Recovered[,2],LinearModel2.Recovered[,2]), type="p",col=c("green","blue"),pch=19,ylab="Separated Subsamples")
plot(Unscrambled.Selection.Sequence[1:100],type="s")
LinearModel1.Recovered.lm<-lm(LinearModel1.Recovered[,2]~LinearModel1.Recovered[,1])
LinearModel2.Recovered.lm<-lm(LinearModel2.Recovered[,2]~LinearModel2.Recovered[,1])
summary(LinearModel1.Recovered.lm)
summary(LinearModel2.Recovered.lm)
Probability.Density.X.1<-density(rawdata$X.1)
plot(Probability.Density.X.1, main = "Density Plot of X values")
print (mean(rawdata$X.1))
print (sd(rawdata$X.1))
print (mean(Unscrambled.Selection.Sequence))
plot(density(LinearModel1.Recovered.lm$residuals))
plot(density(LinearModel2.Recovered.lm$residuals))
# import the data
LinearModel2 <- read.csv("C:/Users/brianr/Desktop/uchicago/statistical_analysis/hw/LinearModelCase2.csv")
head(LinearModel2)
# import the data
LinearModel2 <- read.csv("C:/Users/Brian_Ritz/uchicago/statistical_analysis/hw/week04_hw//LinearModelCase2.csv")
head(LinearModel2)
plot(LinearModel2$X.1, LinearModel2$LinearModel, pch=19, col="blue")
# estimate using linear model
EstimatedLinearModel2 <- lm(LinearModel2$LinearModel~LinearModel2$X.1)
summary(EstimatedLinearModel2)
plot(LinearModel2$X.1,EstimatedLinearModel2$residuals, xlab="X.1", ylab = "Residuals of Estimate", pch=19, col=rgb(0,0,255, 50,maxColorValue = 255))
print(mean(EstimatedLinearModel2$residuals))
variance.by.x.pos <- c()
for (i in (-5:10)){
variance.by.x.pos <- c(variance.by.x.pos, var(EstimatedLinearModel2$residuals[LinearModel2$X.1 > i-.5 & LinearModel2$X.1 <i+.5]))
}
names(variance.by.x.pos) <- -5:10
print(variance.by.x.pos)
summary(LinearModel1.Recovered.lm)
summary(LinearModel2.Recovered.lm)
plot(density(LinearModel2.Recovered.lm$residuals))
print(c(mean(LinearModel2.Recovered.lm$residuals), sd(LinearModel2.Recovered.lm$residuals)))
plot(density(LinearModel1.Recovered.lm$residuals))
print(c(mean(LinearModel1.Recovered.lm$residuals), sd(LinearModel1.Recovered.lm$residuals)))
Probability.Density.X.1<-density(LinearModel2$X.1)
plot(Probability.Density.X.1, main = "Density Plot of X values")
lines(Probability.Density.X.1$x,dnorm(Probability.Density.X.1$x,mean=mean(LinearModel2$X.1),sd=sd(LinearModel2$X.1)), col="red")
print (mean(LinearModel2$X.1))
print (sd(LinearModel2$X.1))
epsilon.variance.est <- lm(variance.by.x.pos~-5:10)
epsilon.variance.est <- lm(variance.by.x.pos~(-5:10))
variance.by.x.pos
lm(variance.by.x.pos)
lm(variance.by.x.pos~variance.by.x.pos)
lm(variance.by.x.pos~-5:10)
(-5:10)
length(-5:10)
length(variance.by.x.pos)
t <- lm(variance.by.x.pos$values)
variance.by.x.vars
variance.by.x.pos
epsilon.variance.est <- lm(variance.by.x.pos ~ -5:10)
epsilon.variance.est <- lm(variance.by.x.pos ~ c(-5:10))
summary(epsilon.variance.est)
epsilon.variance.est <- lm(variance.by.x.pos ~ abs(c(-5:10)))
summary(epsilon.variance.est)
sqrt(.43737)
epsilon.variance.est$coefficients
epsilon.variance.est$coefficients[2]
?rnorm
Xs<- rnorm(100, mean=3, sd=2.5)
Epsilons <- rnorm(1, mean=3, sd=Xs)
length(Epsilons)
length(Xs)
length(Epsilons)
?apply
?sapply
Epsilons <- sapply(Xs, FUN=function(x){rnorm(1,0,sd=(2/3)*x)})
warnings()
Xs<- rnorm(1000, mean=3, sd=2.5)
Epsilons <- sapply(Xs, FUN=function(x){rnorm(1,0,sd=(2/3)*abs(x)})
set.seed(123)
Xs<- rnorm(1000, mean=3, sd=2.5)
Epsilons <- sapply(Xs, FUN=function(x){rnorm(1,0,sd=(2/3)*abs(x)}))
set.seed(123)
Xs<- rnorm(1000, mean=3, sd=2.5)
Epsilons <- sapply(Xs, FUN=function(x){rnorm(1,0,sd=(2/3)*abs(x))})
length(Epsilons)
Ys <- Xs + Epsilons
plot(Ys, Xs, pch=19, col=rgb(0,0,1,.2))
plot(Xs, Ys, pch=19, col=rgb(0,0,1,.2))
plot(LinearModel2$X.1, LinearModel2$LinearModel, pch=19, col="blue")
plot(Xs, Ys, pch=19, col=rgb(0,0,1,.2))
epsilon.variance.est <- lm(variance.by.x.pos ~ abs(c(-5:10)))
summary(epsilon.variance.est)
epsilon.variance.est <- lm(variance.by.x.pos ~ (c(-5:10)))
summary(epsilon.variance.est)
plot(abs(c(-5:10)), variance.by.x.pos)
epsilon.variance.est <- lm(variance.by.x.pos ~ (c(-5:10)))
plot((c(-5:10)), variance.by.x.pos)
